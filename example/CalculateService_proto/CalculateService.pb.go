// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CalculateService.proto

package CalculateService_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//The request message containing the user's name
type CalculateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Method               string   `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Num1                 int32    `protobuf:"varint,3,opt,name=num1,proto3" json:"num1,omitempty"`
	Num2                 int32    `protobuf:"varint,4,opt,name=num2,proto3" json:"num2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateRequest) Reset()         { *m = CalculateRequest{} }
func (m *CalculateRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateRequest) ProtoMessage()    {}
func (*CalculateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6138b9a9d5a728, []int{0}
}

func (m *CalculateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateRequest.Unmarshal(m, b)
}
func (m *CalculateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateRequest.Marshal(b, m, deterministic)
}
func (m *CalculateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateRequest.Merge(m, src)
}
func (m *CalculateRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateRequest.Size(m)
}
func (m *CalculateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateRequest proto.InternalMessageInfo

func (m *CalculateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CalculateRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *CalculateRequest) GetNum1() int32 {
	if m != nil {
		return m.Num1
	}
	return 0
}

func (m *CalculateRequest) GetNum2() int32 {
	if m != nil {
		return m.Num2
	}
	return 0
}

//The response message
type CalculateResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SuccessFlag          bool     `protobuf:"varint,2,opt,name=successFlag,proto3" json:"successFlag,omitempty"`
	Result               float64  `protobuf:"fixed64,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateResponse) Reset()         { *m = CalculateResponse{} }
func (m *CalculateResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateResponse) ProtoMessage()    {}
func (*CalculateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a6138b9a9d5a728, []int{1}
}

func (m *CalculateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateResponse.Unmarshal(m, b)
}
func (m *CalculateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateResponse.Marshal(b, m, deterministic)
}
func (m *CalculateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateResponse.Merge(m, src)
}
func (m *CalculateResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateResponse.Size(m)
}
func (m *CalculateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateResponse proto.InternalMessageInfo

func (m *CalculateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CalculateResponse) GetSuccessFlag() bool {
	if m != nil {
		return m.SuccessFlag
	}
	return false
}

func (m *CalculateResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*CalculateRequest)(nil), "CalculateService_proto.CalculateRequest")
	proto.RegisterType((*CalculateResponse)(nil), "CalculateService_proto.CalculateResponse")
}

func init() { proto.RegisterFile("CalculateService.proto", fileDescriptor_0a6138b9a9d5a728) }

var fileDescriptor_0a6138b9a9d5a728 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x41, 0x4e, 0xc4, 0x30,
	0x0c, 0x45, 0x15, 0x18, 0x06, 0xc6, 0x6c, 0xc0, 0x8b, 0x51, 0xc4, 0xaa, 0xea, 0xaa, 0x6c, 0x2a,
	0x51, 0x8e, 0x80, 0xc4, 0x01, 0xc2, 0x01, 0x20, 0x04, 0x53, 0x90, 0x92, 0xa6, 0xd4, 0x09, 0xe7,
	0x47, 0x98, 0xb4, 0xaa, 0x80, 0xc5, 0xec, 0xfc, 0x9f, 0x2d, 0x7d, 0xff, 0x0f, 0xfb, 0x3b, 0xeb,
	0x5d, 0xf6, 0x36, 0xd1, 0x03, 0x4d, 0x9f, 0xef, 0x8e, 0xda, 0x71, 0x8a, 0x29, 0xe2, 0x1f, 0xfe,
	0x28, 0xbc, 0x7e, 0x85, 0x8b, 0x65, 0x63, 0xe8, 0x23, 0x13, 0x27, 0x44, 0xd8, 0x0c, 0x36, 0x90,
	0x56, 0x95, 0x6a, 0x76, 0x46, 0x66, 0xdc, 0xc3, 0x36, 0x50, 0x7a, 0x8b, 0x2f, 0xfa, 0x48, 0x68,
	0x51, 0x72, 0x9b, 0xc3, 0x8d, 0x3e, 0xae, 0x54, 0x73, 0x62, 0x64, 0x2e, 0xac, 0xd3, 0x9b, 0x85,
	0x75, 0x75, 0x0f, 0x97, 0x2b, 0x1f, 0x1e, 0xe3, 0xc0, 0x84, 0x1a, 0x4e, 0x03, 0x31, 0xdb, 0x7e,
	0xf6, 0x9a, 0x25, 0x56, 0x70, 0xce, 0xd9, 0x39, 0x62, 0xbe, 0xf7, 0xb6, 0x17, 0xcf, 0x33, 0xb3,
	0x46, 0xdf, 0x0f, 0x4d, 0xc4, 0xd9, 0x27, 0xb1, 0x56, 0xa6, 0xa8, 0x2e, 0xad, 0x02, 0x95, 0xa8,
	0xf8, 0x04, 0xbb, 0x85, 0x61, 0xd3, 0xfe, 0x5f, 0x45, 0xfb, 0xbb, 0x87, 0xab, 0xeb, 0x03, 0x2e,
	0x7f, 0x92, 0x3c, 0x6f, 0x65, 0x71, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x92, 0x55, 0x83, 0x75,
	0x7f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculateServiceClient is the client API for CalculateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculateServiceClient interface {
	Calculate(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error)
}

type calculateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculateServiceClient(cc *grpc.ClientConn) CalculateServiceClient {
	return &calculateServiceClient{cc}
}

func (c *calculateServiceClient) Calculate(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error) {
	out := new(CalculateResponse)
	err := c.cc.Invoke(ctx, "/CalculateService_proto.CalculateService/Calculate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculateServiceServer is the server API for CalculateService service.
type CalculateServiceServer interface {
	Calculate(context.Context, *CalculateRequest) (*CalculateResponse, error)
}

// UnimplementedCalculateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculateServiceServer struct {
}

func (*UnimplementedCalculateServiceServer) Calculate(ctx context.Context, req *CalculateRequest) (*CalculateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calculate not implemented")
}

func RegisterCalculateServiceServer(s *grpc.Server, srv CalculateServiceServer) {
	s.RegisterService(&_CalculateService_serviceDesc, srv)
}

func _CalculateService_Calculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).Calculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CalculateService_proto.CalculateService/Calculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).Calculate(ctx, req.(*CalculateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CalculateService_proto.CalculateService",
	HandlerType: (*CalculateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calculate",
			Handler:    _CalculateService_Calculate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "CalculateService.proto",
}
